Use Case 1: Register User
Actor(s): User, System
Main Flow:
User enters personal information (e.g., name, email, password) into the registration form.
System validates the input to ensure all required fields are filled correctly (e.g., checking for empty fields or valid email format).
If the input is valid, the system saves the user information.
The system sends a confirmation message to the user, informing them that their registration was successful.
Alternative Flows:
Invalid Input: If the user enters invalid or incomplete information (e.g., empty fields, invalid email), the system highlights the error and asks the user to correct it.
Email Already Registered: If the email address is already associated with an existing account, the system prompts the user to enter a different email address.


Use Case 2: Search for Books
Actor(s): User, System, Database
Main Flow:
User enters a search query (e.g., book title, author name, genre) into the search bar.
The system processes the search query and queries the book database.
The database returns a list of books that match the search criteria.
The system displays the book results to the user.
Alternative Flows:
No Results Found: If no books match the search criteria, the system notifies the user that no results were found and suggests refining the search.
Invalid Query: If the search query is too vague or invalid, the system prompts the user to enter a more specific or correct query.


use Case 3: Browse Book Categories
Actor(s): User, System, Database
Main Flow:
User selects the "Browse Categories" option to view available book categories.
The system fetches the list of categories from the database.
The database returns the categories (e.g., fiction, non-fiction, fantasy).
The system displays the list of categories to the user.
User selects a category to view the books in that category.
Alternative Flows:
No Categories Available: If no categories are available, the system informs the user and suggests using the search feature instead.
Error Fetching Categories: If the system encounters an error when fetching the categories, it notifies the user and asks them to try again later.



Use Case 4: Borrow Books
Actor(s): User, System, Database
Main Flow:
User selects the books they want to borrow from the library catalog.
The system checks the availability of the selected books.
The system queries the database to confirm whether the books are available.
If the books are available, the system confirms the borrow request to the user.
The system updates the borrowing status, marking the books as borrowed.
Alternative Flows:
Book Unavailable: If the selected book is unavailable, the system notifies the user and offers alternatives or allows them to wait for the book's return.
Max Borrow Limit Reached: If the user has already reached the borrowing limit, the system prevents borrowing additional books and notifies the user.
User Not Logged In: If the user is not logged in, the system prompts the user to log in before they can borrow books.



Use Case 5: Return Books
Actor(s): User, System, Database
Main Flow:
User selects the books they want to return from the borrowed books list.
The system processes the return request and checks the status of the borrowed books.
The system updates the book status in the database, marking them as returned.
The system confirms the return with a message to the user.
Alternative Flows:
Late Return: If the return is late, the system may apply a late fee or notify the user about overdue books.
Book Not Borrowed: If the user tries to return a book not borrowed, the system informs the user that the book cannot be returned.
